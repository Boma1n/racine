/*! For license information please see main.4324a88dc6d845a1d8f9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateracine("main",{"./app/index.js":(t,e,a)=>{a.r(e);var n=a("./node_modules/lodash/each.js"),s=a.n(n),i=a("./app/pages/front/Home.js"),o=a("./app/pages/front/Events.js");new class{constructor(){this.createContent(),this.createPages(),this.addListenerLinks()}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={home:new i.default,events:new o.default},this.page=this.pages[this.template],this.page.create()}async onChange({url:t,push:e=!0}){t=t.replace(window.location.origin,""),await this.page.hide();const a=await window.fetch(t);if(200===a.status){const t=await a.text(),e=document.createElement("div");e.innerHTML=t;const n=e.querySelector(".content");this.template=n.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.content.innerHTML=n.innerHTML,this.page=this.pages[this.template],this.page.create(),this.page.show(),this.addListenerLinks()}else console.log("Error")}addListenerLinks(){const t=document.querySelectorAll("a");s()(t,(t=>{t.onclick=e=>{const{href:a}=t;this.onChange({url:t.href})}}))}}}},(function(t){t.h=()=>"975ca00a573d3b63d596"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi40MzI0YTg4ZGM2ZDg0NWExZDhmOS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7eU1Bc0VBLElBakVBLE1BQ0VBLGNBQ0VDLEtBQUtDLGdCQUNMRCxLQUFLRSxjQUNMRixLQUFLRyxtQkFHUEYsZ0JBQ0VELEtBQUtJLFFBQVVDLFNBQVNDLGNBQWMsWUFDdENOLEtBQUtPLFNBQVdQLEtBQUtJLFFBQVFJLGFBQWEsaUJBRzVDTixjQUNFRixLQUFLUyxNQUFRLENBQ1hDLEtBQU0sSUFBSUMsRUFBQUEsUUFDVkMsT0FBUSxJQUFJQyxFQUFBQSxTQUdkYixLQUFLYyxLQUFPZCxLQUFLUyxNQUFNVCxLQUFLTyxVQUM1QlAsS0FBS2MsS0FBS0MsU0FHRSxnQkFBQyxJQUFFQyxFQUFGLEtBQU9DLEdBQU8sSUFDM0JELEVBQU1BLEVBQUlFLFFBQVFDLE9BQU9DLFNBQVNDLE9BQVEsVUFFcENyQixLQUFLYyxLQUFLUSxPQUVoQixNQUFNQyxRQUFnQkosT0FBT0ssTUFBTVIsR0FDbkMsR0FBc0IsTUFBbkJPLEVBQVFFLE9BQWdCLENBQ3pCLE1BQU1DLFFBQWFILEVBQVFJLE9BQ3JCQyxFQUFNdkIsU0FBU3dCLGNBQWMsT0FFbkNELEVBQUlFLFVBQVlKLEVBRWhCLE1BQU1LLEVBQWFILEVBQUl0QixjQUFjLFlBRXJDTixLQUFLTyxTQUFXd0IsRUFBV3ZCLGFBQWEsaUJBRXhDUixLQUFLSSxRQUFRNEIsYUFBYSxnQkFBaUJoQyxLQUFLTyxVQUNoRFAsS0FBS0ksUUFBUTBCLFVBQVlDLEVBQVdELFVBRXBDOUIsS0FBS2MsS0FBT2QsS0FBS1MsTUFBTVQsS0FBS08sVUFDNUJQLEtBQUtjLEtBQUtDLFNBQ1ZmLEtBQUtjLEtBQUttQixPQUVWakMsS0FBS0csd0JBRUwrQixRQUFRQyxJQUFJLFNBSWhCaEMsbUJBQ0UsTUFBTWlDLEVBQVEvQixTQUFTZ0MsaUJBQWlCLEtBQ3hDQyxHQUFBQSxDQUFLRixHQUFPRyxJQUNWQSxFQUFLQyxRQUFVQyxJQUNiLE1BQU0sS0FBRUMsR0FBU0gsRUFFakJ2QyxLQUFLMkMsU0FBUyxDQUNaM0IsSUFBS3VCLEVBQUtHLDRCQy9EcEJFLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWNpbmUvLi9hcHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vcmFjaW5lL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCc7XHJcblxyXG5pbXBvcnQgSG9tZSBmcm9tICcuL3BhZ2VzL2Zyb250L0hvbWUnO1xyXG5pbXBvcnQgRXZlbnRzIGZyb20gJy4vcGFnZXMvZnJvbnQvRXZlbnRzJztcclxuXHJcbmNsYXNzIEFwcCB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmNyZWF0ZUNvbnRlbnQoKVxyXG4gICAgdGhpcy5jcmVhdGVQYWdlcygpXHJcbiAgICB0aGlzLmFkZExpc3RlbmVyTGlua3MoKVxyXG4gIH1cclxuXHJcbiAgY3JlYXRlQ29udGVudCAoKSB7XHJcbiAgICB0aGlzLmNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpXHJcbiAgICB0aGlzLnRlbXBsYXRlID0gdGhpcy5jb250ZW50LmdldEF0dHJpYnV0ZSgnZGF0YS10ZW1wbGF0ZScpXHJcbiAgfVxyXG5cclxuICBjcmVhdGVQYWdlcygpIHtcclxuICAgIHRoaXMucGFnZXMgPSB7XHJcbiAgICAgIGhvbWU6IG5ldyBIb21lKCksXHJcbiAgICAgIGV2ZW50czogbmV3IEV2ZW50cygpLFxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMucGFnZSA9IHRoaXMucGFnZXNbdGhpcy50ZW1wbGF0ZV1cclxuICAgIHRoaXMucGFnZS5jcmVhdGUoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgb25DaGFuZ2UoeyB1cmwsIHB1c2ggPSB0cnVlIH0pIHtcclxuICAgIHVybCA9IHVybC5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4sICcnKVxyXG5cclxuICAgIGF3YWl0IHRoaXMucGFnZS5oaWRlKCk7XHJcblxyXG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IHdpbmRvdy5mZXRjaCh1cmwpO1xyXG4gICAgaWYocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICBjb25zdCBodG1sID0gYXdhaXQgcmVxdWVzdC50ZXh0KCk7XHJcbiAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cclxuICAgICAgZGl2LmlubmVySFRNTCA9IGh0bWw7XHJcblxyXG4gICAgICBjb25zdCBkaXZDb250ZW50ID0gZGl2LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50JylcclxuXHJcbiAgICAgIHRoaXMudGVtcGxhdGUgPSBkaXZDb250ZW50LmdldEF0dHJpYnV0ZSgnZGF0YS10ZW1wbGF0ZScpXHJcblxyXG4gICAgICB0aGlzLmNvbnRlbnQuc2V0QXR0cmlidXRlKCdkYXRhLXRlbXBsYXRlJywgdGhpcy50ZW1wbGF0ZSlcclxuICAgICAgdGhpcy5jb250ZW50LmlubmVySFRNTCA9IGRpdkNvbnRlbnQuaW5uZXJIVE1MXHJcblxyXG4gICAgICB0aGlzLnBhZ2UgPSB0aGlzLnBhZ2VzW3RoaXMudGVtcGxhdGVdXHJcbiAgICAgIHRoaXMucGFnZS5jcmVhdGUoKVxyXG4gICAgICB0aGlzLnBhZ2Uuc2hvdygpXHJcblxyXG4gICAgICB0aGlzLmFkZExpc3RlbmVyTGlua3MoKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5sb2coJ0Vycm9yJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhZGRMaXN0ZW5lckxpbmtzKCkge1xyXG4gICAgY29uc3QgbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhJyk7XHJcbiAgICBlYWNoKGxpbmtzLCBsaW5rID0+IHtcclxuICAgICAgbGluay5vbmNsaWNrID0gZSA9PiB7XHJcbiAgICAgICAgY29uc3QgeyBocmVmIH0gPSBsaW5rO1xyXG5cclxuICAgICAgICB0aGlzLm9uQ2hhbmdlKHtcclxuICAgICAgICAgIHVybDogbGluay5ocmVmXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG59XHJcblxyXG5uZXcgQXBwKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiOTc1Y2EwMGE1NzNkM2I2M2Q1OTZcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJ0aGlzIiwiY3JlYXRlQ29udGVudCIsImNyZWF0ZVBhZ2VzIiwiYWRkTGlzdGVuZXJMaW5rcyIsImNvbnRlbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZW1wbGF0ZSIsImdldEF0dHJpYnV0ZSIsInBhZ2VzIiwiaG9tZSIsIkhvbWUiLCJldmVudHMiLCJFdmVudHMiLCJwYWdlIiwiY3JlYXRlIiwidXJsIiwicHVzaCIsInJlcGxhY2UiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsImhpZGUiLCJyZXF1ZXN0IiwiZmV0Y2giLCJzdGF0dXMiLCJodG1sIiwidGV4dCIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJkaXZDb250ZW50Iiwic2V0QXR0cmlidXRlIiwic2hvdyIsImNvbnNvbGUiLCJsb2ciLCJsaW5rcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlYWNoIiwibGluayIsIm9uY2xpY2siLCJlIiwiaHJlZiIsIm9uQ2hhbmdlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9